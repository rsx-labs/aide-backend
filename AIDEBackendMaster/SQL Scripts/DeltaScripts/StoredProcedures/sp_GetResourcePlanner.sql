USE [AIDE]
GO
/****** Object:  StoredProcedure [dbo].[sp_GetResourcePlanner]    Script Date: 01/06/2020 1:41:40 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.sp_GetResourcePlanner'))
    BEGIN
        DROP PROCEDURE [dbo].[sp_GetResourcePlanner]
    END
GO

CREATE PROCEDURE [dbo].[sp_GetResourcePlanner]
	-- Add the parameters for the stored procedure here
	@EMAIL_ADDRESS VARCHAR(MAX),
	@STATUS int,
	@ToDisplay int, -- 1=weekly; 2=monthly; 3=Fiscal Year
	@YEAR int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	
	DECLARE @EMPID INT = (SELECT E.EMP_ID FROM EMPLOYEE E INNER JOIN CONTACTS C ON E.EMP_ID = C.EMP_ID WHERE EMAIL_ADDRESS = @EMAIL_ADDRESS)
	DECLARE @DEPTID INT = (SELECT DEPT_ID FROM EMPLOYEE WHERE EMP_ID = @EMPID)
	DECLARE @DIVID INT = (SELECT DIV_ID FROM EMPLOYEE WHERE EMP_ID = @EMPID)
	DECLARE @FIRSTMONTH DATE
	DECLARE @LASTMONTH DATE
	DECLARE @USEDLEAVES FLOAT
	DECLARE @BALANCE FLOAT
	
	SET @FIRSTMONTH = CAST('4/1/' + Cast(@YEAR as varchar) AS DATE)
	SET @LASTMONTH = CAST('3/31/' + Cast(@YEAR + 1 as varchar) AS DATE)
	
	DECLARE @temptable TABLE (EMP_ID INT,
							  FIRST_NAME NVARCHAR(MAX), 
							  LAST_NAME NVARCHAR(MAX), 
							  NICK_NAME NVARCHAR(MAX), 
							  STATUS NVARCHAR(20), 
							  USEDLEAVES FLOAT,
							  HALFBALANCE FLOAT,
							  TOTALBALANCE FLOAT)

	DECLARE @counter INT = 1
	DECLARE @total INT = (SELECT COUNT(EMP_ID) FROM EMPLOYEE WHERE DEPT_ID = @DEPTID AND DIV_ID = @DIVID AND ACTIVE = 1)
	
	WHILE (@counter <= @total)
	BEGIN
		--Selecting employee ID
		SET @EMPID = (SELECT EMP_ID 
					  FROM (SELECT ROW_NUMBER() OVER (ORDER BY EMP_ID ASC) AS rownumber, EMP_ID 
							FROM EMPLOYEE 
							WHERE DEPT_ID = @DEPTID 
							AND DIV_ID = @DIVID
							AND ACTIVE = 1) as temptablename 
					  WHERE rownumber = @counter)
 
		--Columns insert into temporary table
		IF @ToDisplay = 1 -- WEEKLY
	
			IF @STATUS = 3 OR @STATUS = 5	
				INSERT INTO @temptable (EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME, STATUS, USEDLEAVES, TOTALBALANCE, HALFBALANCE) 		
				SELECT 
					EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME,
					(SELECT ISNULL(SUM(COUNTS), 0) 
					 FROM RESOURCE_PLANNER 
					 WHERE EMP_ID = @EMPID 
					 AND STATUS IN (3, 5) 
					 AND DATEPART(WK, DATE_ENTRY) = DATEPART(WK, GETDATE())) AS 'STATUS', 0, 0, 0
				FROM EMPLOYEE WHERE EMP_ID = @EMPID
			ELSE
				INSERT INTO @temptable (EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME, STATUS, USEDLEAVES, TOTALBALANCE, HALFBALANCE) 	
				SELECT 
					EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME,
					(SELECT ISNULL(SUM(COUNTS), 0) 
					 FROM RESOURCE_PLANNER 
					 WHERE EMP_ID = @EMPID 
					 AND STATUS IN (4, 6, 8, 9) 
					 AND DATEPART(WK, DATE_ENTRY) = DATEPART(WK, GETDATE())) AS 'STATUS', 0, 0, 0
				FROM EMPLOYEE WHERE EMP_ID = @EMPID

		ELSE IF @ToDisplay = 2 -- MONTHLY
			IF @STATUS = 3  OR @STATUS = 5 -- SICK LEAVE			
				INSERT INTO @temptable (EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME, STATUS, USEDLEAVES, TOTALBALANCE, HALFBALANCE) 			
				SELECT 
					EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME,
					(SELECT ISNULL(SUM(COUNTS), 0) 
					 FROM RESOURCE_PLANNER 
					 WHERE EMP_ID = @EMPID 
					 AND STATUS IN (3, 5) 
					 AND MONTH(DATE_ENTRY) = MONTH(GETDATE()) 
					 AND YEAR(DATE_ENTRY) = YEAR(GETDATE())) AS 'STATUS', 0, 0, 0
				FROM EMPLOYEE WHERE EMP_ID = @EMPID
			ELSE			
				INSERT INTO @temptable (EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME, STATUS, USEDLEAVES, TOTALBALANCE, HALFBALANCE) 			
				SELECT 
					EMP_ID,	FIRST_NAME, LAST_NAME, NICK_NAME,
					(SELECT ISNULL(SUM(COUNTS), 0) 
					 FROM RESOURCE_PLANNER 
					 WHERE EMP_ID = @EMPID 
					 AND STATUS IN (4, 6, 8, 9) 
					 AND MONTH(DATE_ENTRY) = MONTH(GETDATE()) 
					 AND YEAR(DATE_ENTRY) = YEAR(GETDATE())) AS 'STATUS', 0, 0, 0
				FROM EMPLOYEE WHERE EMP_ID = @EMPID

		ELSE IF @ToDisplay = 3 -- YEAR
			IF @STATUS = 3 OR @STATUS = 5 -- SICK LEAVE
				BEGIN
					IF EXISTS (SELECT (1) FROM LEAVE_CREDITS WHERE FY_START = @FIRSTMONTH AND EMP_ID = @EMPID AND STATUS = 3)
						BEGIN
							SET @USEDLEAVES = (SELECT ISNULL(SUM(COUNTS), 0) 
									   FROM RESOURCE_PLANNER
									    WHERE EMP_ID = @EMPID 
										AND STATUS IN (3, 5)
										AND DATE_ENTRY >= @FIRSTMONTH
										AND DATE_ENTRY < @LASTMONTH)

							SET @BALANCE = (SELECT ISNULL(SUM(LEAVE_CREDITS), 0)  - @USEDLEAVES 
											FROM LEAVE_CREDITS
											WHERE STATUS = @STATUS AND EMP_ID = @EMPID 
											AND FY_START = @FIRSTMONTH)

							INSERT INTO @temptable (EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME, STATUS, USEDLEAVES, TOTALBALANCE, HALFBALANCE) 			
							SELECT 
								EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME, @USEDLEAVES, @USEDLEAVES, @BALANCE, 0
							FROM EMPLOYEE WHERE EMP_ID = @EMPID
						END
				END
			ELSE		
				BEGIN	
					IF EXISTS (SELECT (1) FROM LEAVE_CREDITS WHERE FY_START = @FIRSTMONTH AND EMP_ID = @EMPID AND STATUS = 4)
						BEGIN
							SET @USEDLEAVES = (SELECT ISNULL(SUM(COUNTS), 0) 
											   FROM RESOURCE_PLANNER 
											   WHERE EMP_ID = @EMPID 
											   AND STATUS IN (4, 6, 8, 9) 
											   AND DATE_ENTRY >= @FIRSTMONTH 
											   AND DATE_ENTRY < @LASTMONTH)

							 DECLARE @HALFLEAVES FLOAT = (SELECT CASE WHEN FLOOR(LEAVE_CREDITS) = LEAVE_CREDITS 
																 THEN LEAVE_CREDITS / 2
																 ELSE ((LEAVE_CREDITS - .5) / 2) + .5 END 
														  FROM LEAVE_CREDITS 
														  WHERE STATUS = @STATUS AND EMP_ID = @EMPID AND FY_START = @FIRSTMONTH)

							DECLARE @HALFBALANCE FLOAT = ISNULL(SUM(@HALFLEAVES), 0) - @USEDLEAVES
							-- All Half Balance has been used
							IF @HALFBALANCE <= 0
								SET @HALFBALANCE = 0

						
							SET @BALANCE = (SELECT ISNULL(SUM(LEAVE_CREDITS), 0) - @USEDLEAVES - @HALFBALANCE
											FROM LEAVE_CREDITS
											WHERE STATUS = @STATUS AND EMP_ID = @EMPID AND FY_START = @FIRSTMONTH)

							INSERT INTO @temptable (EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME, STATUS, USEDLEAVES, TOTALBALANCE, HALFBALANCE) 			
							SELECT EMP_ID, FIRST_NAME, LAST_NAME, NICK_NAME, @USEDLEAVES, @USEDLEAVES, @BALANCE, @HALFBALANCE 
							FROM EMPLOYEE WHERE EMP_ID = @EMPID
						END
				END

			SET @counter = @counter + 1
		END

		SELECT EMP_ID AS EMP_ID, FIRST_NAME AS EMPLOYEE_NAME, STATUS, USEDLEAVES, TOTALBALANCE, HALFBALANCE FROM @temptable ORDER BY LAST_NAME

END


